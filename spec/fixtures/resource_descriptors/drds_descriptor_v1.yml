# A resource descriptor is a configuration file that defines the semantic data, states, and 
# state transitions associated with a particular resource independent of protocol and 
# media-type. Further, it also defines protocol specific templates for links that can be 
# included in the response and populated based on the associated state. By including optional 
# routes related metadata in the configuration, routes.rb mappings can be managed DRYly in 
# the resource descriptor file.
#
# The following sections facilitate a number of objectives including generating an ALPS profile 
# of the resource, generating human readable documents including sample representations, 
# decorating service responses, and scaffolding routes, controllers and models.

id: drds:v1.0.0
name: drds
version: v1.0.0
doc: A list of DRDs.
links:
  self:
    href: http://alps.io.example.org/DRDs
  help:
    href: http://schema.example.org/Things/DRDs
    
# Metadata associated with the resource that is used to publish the entry point to a discovery 
# service listing entry points for resources.
entry_point:
  http: drds
      
# Semantic descriptors represent semantic definitions of data and thus in the context of ALPS 
# represent type='semantic' descriptors. Elements MAY include a sample value that can be used 
# to generate sample representations of the a resource in different media-types.
semantics:
  total_count:
    doc: The total count of DRDs.
    href: http://alps.io.example.org/schema.org/Integer
    sample: 1
  items:
    doc: An array of embedded DRD resources.
    href: http://alps.io.example.org/DRD
    embed: multiple # Select non-ALPS values are treated as extensions in the profile.

# This section associates a simple state-machine DSL with the particular resource. It shows
# the state name and lists the data and application affordances available in that state and 
# what states are exposed by following the transitions.
#
# TODO: Investigate adding metadata on states and transitions
states: 
  collection:
    start: true
    transitions:
      - self:
        next:
          - collection
      - search:
        next:
          - navigation
          - error
      - create:
        next:
          - error
          - created: drd
    substate:
      items:
        resource: drd
        state: item    
  navigation:
    transitions:
      - self:
        next:
          - navigation
      - search:
        next:
          - navigation
          - error
    substate:
      items:
        resource: drd
        state: item           
  error:
    resource: errors
       
# Transition descriptors represent application affordances and in the context of ALPS 
# represent type='safe,unsafe,idempotent' descriptors. 
transitions:
  self: 
    links:
      rel: http://tools.ietf.org/html/rfc4287
    type: safe
    rt: http://alps.io.example.org/DRDs
  search:
    links:
      rel: http://descriptions.example.com/rel/search
    type: safe
    rt: http://alps.io.example.org/DRDs
    semantics:
      search_term:
        doc: The terms to search.
        href: http://alps.io/schema.org/Text 
  create:
    links:
      rel: http://descriptions.example.org/rel/create
    type: unsafe
    rt: http://alps.io.example.org/DRD
    template:
      create-drd:
        links:
          self:
            href: http://alps.io.example.org/DRDs#create/create-drd
          help:
            href: http://example.org/Forms/create-drd
        semantics:
          name:
            doc: The name of the DRD.
            href: http://alps.io/schema.org/Text
            field_type: input
            validators:
              - properties:
                name:
                  type: string
                  description: The validation name.
                rule:
                  type: object
                  description:
                message:
                  type: string
                  description: Optional message template.
                  required: false
                message_code: 
                  type: string
                  description: Optional message code that can be used to internationalize messages.
          status:
            doc: How is the DRD.
            href: http://alps.io/schema.org/Text
            field_type: select
            enum:
              - working
              - renegade
              - broken
            validators:
              - presence
          kind:
            doc: What kind is it.
            href: http://alps.io/schema.org/Text
            field_type: multi-select
            enum:
              - standard
              - sentinel
            validators:
              - presence
          leviathan_uuid:
            doc: The UUID of the creator Leviathan.
            href: http://alps.io/schema.org/Text
            field_type: select
            enum:
              href: http://alps.io.example.org/Leviathans#list
            validators:
              - presence
     
# The protocol descriptors section defines the protocol affordances associated with the 
# application affordances. This decouples protocol specific information from the 
# semantic description of a resource and its affordances.
protocols:
  http:
    self: &list
      uri: drds
      method: GET
      content_types:
        - application/json
        - application/hal+json
      headers:
      status_codes:
      slt:
        99th_percentile: 100ms
        std_dev: 25ms
        requests_per_second: 50 
    search: 
      uri: drds{?search_term}
      method: GET
      content_types:
        - application/json
        - application/hal+json
      headers:
      status_codes:
      slt:
        99th_percentile: 100ms
        std_dev: 25ms
        requests_per_second: 50
    create:
      uri: drds
      method: POST
      content_types:
        - application/json
        - application/hal+json
      headers:
      status_codes:
      slt:
        99th_percentile: 250ms
        std_dev: 50ms
        requests_per_second: 25
   
# This optional section defines the route mapping for the resource that can be used in 
# lieu of defining them in a separate file like routes.rb or to scaffold a Sinatra
# application. It has nothing to do with the resource semantics per se, but is rather
# a convenience for DRYing out routing in a service.
routes:
  list: 
    controller: drds_controller
    action: index
  search: 
    controller: drds_controller
    action: index
  create: 
    controller: drds_controller
    action: create
