# A resource descriptor is a declarative configuration file that defines the semantic data,  
# states, and state transitions associated with a particular resource independent of protocol 
# media-type. Further, it also defines protocol specific templates for links that can be 
# and  included in the response and populated based on the associated state. By including  
# optional routes related metadata in the configuration, routes.rb mappings can be managed  
# DRYly in the resource descriptor file.
#
# The following sections facilitate a number of objectives including generating an ALPS profile 
# of the resource, generating human readable documents including sample representations, 
# decorating service responses, and scaffolding routes, controllers and models.

id: DRDs
version: v1.0.0
doc: Describes the semantics, states and state transitions associated with DRDs.
links:
  - rel: self
    href: alps_base/DRDs
  - rel: help
    href: documentation_base/Things/DRDs
 
# This section associates a simple state-machine DSL with the particular resource. It shows
# the state name and lists the data and application affordances available in that state, 
# conditions for inclusion of a transition in a response and what states are exposed by 
# following the transitions.

states:
  drds:
    - id: collection
      doc: The entry point state for interacting with DRDs.
      location: entry
      transitions:
        - id: list
          name: self
          next:
            - collection
        - id: search
          next:
            - navigation
        - id: create
          conditions:
            - can_create 
            - can_do_anything
          next:
            - activated
            - error   
    - id: navigation
      doc: Represents a filtered list of DRDs.
      transitions:
        - id: search
          name: self
          next:
            - navigation
        - id: search
          next:
            - navigation        
  drd:
    - id: activated 
      doc: The default state of a DRD.
      transitions:
        - id: show
          name: self
          next:
            - item
        - id: deactivate
          conditions:
            - can_deactivate 
            - can_update 
            - can_do_anything
          next:
           - deactivated
        - id: delete
          conditions:
            - airlock_open 
            - can_delete 
            - can_do_anything
          next:
            - deleted
        - id: leviathan-link
          name: leviathan
          next:
            - location: http://alps.io/schema.org/Leviathans#leviathan
        - id: repair-history
          conditions:
            - can_repair
          next:
            - location: http://alps.io/schema.org/Repais#history
    - id: deactivated
      doc: The DRD is shut down.
      transitions:
        - id: show
          name: self
          next:
            - item
        - id: activate
          conditions:
            - can_activate 
            - can_update 
            - can_do_anything
          next:
           - activated
        - id: update
          conditions:
            - can_update 
            - can_do_anything
          next:
            - deactivated
        - id: delete
          conditions:
            - airlock_open 
            - can_delete 
            - can_do_anything
          next:
            - deleted
        - id: leviathan-link
          name: leviathan
          next:
            - location: http://alps.io/schema.org/Leviathans#leviathan
    - id: deleted
      doc: The DRD is now free-floating in space.
      location: exit
    - id: error
      doc: An error has occured.
      location: http://alps.io/schema.org/Error
      
# Semantic descriptors represent semantic definitions of data and thus in the context of ALPS 
# represent type='semantic' descriptors. Elements MAY include a sample value that can be used 
# to generate sample representations of the a resource in different media-types.
#
# Transition descriptors represent application affordances and in the context of ALPS 
# represent type='safe,unsafe,idempotent' descriptors. 

descriptors:
  - id: drds
    doc: 
      html: <p>A list of DRDs.</p>
    type: semantic
    links:
      - rel: self
        href: alps_base/DRDs#drds
    descriptors:
      # Semantics
      - id: total_count
        doc: The total count of DRDs.
        type: semantic
        href: http://alps.io/schema.org/Integer
        sample: 1
      - id: items
        doc: An array of embedded DRD resources.
        type: semantic
        href: drd
        embed: multiple # Select non-ALPS values are treated as extensions in the profile.
      # Transitions
      - id: list
        doc: Returns a list of DRDs.
        type: safe
        rt: drds
      - id: search
        doc: Returns a list of DRDs that satisfy the search term.
        type: safe
        rt: drds
        descriptors:
          - id: search_term
            doc: The terms to search.
            type: semantic
            href: http://alps.io/schema.org/Text
      - id: create
        doc: Creates a DRD.
        type: unsafe
        rt: drd
        descriptors:
          create-drd:
            type: semantic
            href: drd/update/update-drd # Indicates that this should dereference update-drd
            links:
              - rel: self 
                href: alps_base/DRDs#drd/create/create-drd
              - rel: help
                href: documentation_base/Forms/create-drd
            descriptors:
              - id: form-name
                name: name
                doc: The name of the DRD.
                type: semantic
                href: http://alps.io/schema.org/Text
                field_type: input
                validators:
                  - presence
              - id: form-leviathan_uuid
                name: leviathan_uuid
                doc: The UUID of the creator Leviathan.
                type: semantic
                href: http://alps.io/schema.org/Text
                field_type: select
                enum:
                  href: http://alps.io.example.org/Leviathans#list
                validators:
                  - presence     
  - id: drd
    doc: |
      Diagnostic Repair Drones or DRDs are small robots that move around Leviathans. They are
      built by a Leviathan as it grows.
    type: semantic
    links:
      - rel: self
        href: alps_base/DRDs#drd
    descriptors:
      # Semantics
      - id: uuid
        doc: The UUID of the DRD.
        type: semantic
        href: http://alps.io/schema.org/Text
        sample: 007d8e12-babd-4f2c-b01e-8b5e2f749e1b           
      - id: name
        doc: The name of the DRD.
        type: semantic
        href: http://alps.io/schema.org/Text
        sample: 1812
      - id: status
        doc: How is the DRD.
        type: semantic
        href: http://alps.io/schema.org/Text
        sample: renegade
      - id: kind
        doc: What kind is it.
        type: semantic
        href: http://alps.io/schema.org/Text
        sample: standard
      - id: leviathan_uuid
        doc: The UUID of the creator Leviathan.
        type: semantic
        href: http://alps.io/schema.org/Text
        sample: 007d8e12-babd-4f2c-b01e-8b5e2f749e1b
      - id: built_at
        doc: When the DRD was constructed.
        type: semantic
        href: http://alps.io/schema.org/DateTime
        sample: 2013-03-20T00:00:00+00:00
      - id: leviathan
        doc: The associated Leviathan resource.
        type: semantic
        href: http://alps.io/schema.org/Thing/Leviathan
        embed: optional
      # Transitions
      - id: show
        doc: Shows a particular DRD.
        type: safe
        rt: drd
      - id: activate
        doc: Activates a DRD if it is deactivated.
        type: idempotent
        rt: drd
      - id: deactivate
        doc: Deactivates a DRD if it is activated.
        type: idempotent
        rt: drd
      - id: leviathan-link
        name: leviathan
        doc: A reference to the Leviathan the DRD works on.
        type: safe
        embed: true
        rt: http://alps.io/schema.org/Leviathan#leviathan
      - id: repair-history
        doc: A reference to the list of historical repairs performed.
        type: safe
        embed: true
        rt: http://alps.io/schema.org/Repairs#history
      - id: update
        doc: Updates a DRD.
        type: idempotent
        descriptors:
          - id: update-drd
            type: semantic
            links:
              - rel: self 
                href: alps_base/DRDs#drd/update/update-drd  
              - rel: help
                href: documentation_base/Forms/update-drd
            descriptors:
              - id: form-status
                doc: How is the DRD.
                href: http://alps.io/schema.org/Text
                name: status
                field_type: select
                enum:
                  - working
                  - renegade
                  - broken
                validators:
                  - presence
              - id: form-kind
                name: kind
                doc: What kind is it.
                href: http://alps.io/schema.org/Text
                field_type: multi-select
                enum:
                  - standard
                  - sentinel
                validators:
                  - presence 
      - id: delete
        doc: Drops a DRD out an air-lock.
        type: idempotent    

# The protocol descriptors section defines the protocol affordances associated with the 
# application affordances. This decouples protocol specific information from the 
# semantic description of a resource and its affordances.
protocols:
  http:
    list:
      uri: drds
      entry_point: drds # Indicates this endpoint is a resource entry point for the protocol.
      method: GET
      content_types:
        - application/json
        - application/hal+json
        - application/xhtml+xml
      headers:
        - Content-Type
        - ETag
      status_codes:
        200:
          status: OK
          definitions:
            - We have processed your request and returned the data you asked for.
      slt: &slt1
        99th_percentile: 100ms
        std_dev: 25ms
        requests_per_second: 50 
    search: 
      uri: drds{?search_term}
      method: GET
      content_types:
        - application/json
        - application/hal+json
      headers:
      status_codes:
      slt: &slt2
        99th_percentile: 250ms
        std_dev: 50ms
        requests_per_second: 25
    create:
      uri: drds
      method: POST
      content_types:
        - application/json
        - application/hal+json
      headers:
      status_codes:
      slt: *slt2  
    show:
      uri: drd/{uuid}
      method: GET
      content_types:
        - application/json
        - application/hal+json
      headers:
      status_codes:
      slt: *slt1
    activate:
      uri: drd/{uuid}/activate
      method: PUT
      content_types:
        - application/json
        - application/hal+json
      headers:
      status_codes:
      slt: *slt1
    deactivate:
      uri: drd/{uuid}/deactivate
      method: PUT
      content_types:
        - application/json
        - application/hal+json
      headers:
      status_codes:
      slt: *slt1
    update:
      uri: drd/{uuid}
      method: PUT
      content_types:
        - application/json
        - application/hal+json
      headers:
      status_codes:
      slt: *slt2
    delete:
      uri: drds/{uuid}
      method: DELETE
      content_types:
        - application/json
        - application/hal+json
      headers:
      status_codes:
      slt: *slt1
        
# This optional section defines the route mapping for the resource that can be used in 
# lieu of defining them in a separate file like routes.rb or to scaffold a Sinatra
# application. It has nothing to do with the resource semantics per se, but is rather
# a convenience for DRYing out routing in a service.
routes:
  drds:
    list: &list
      controller: drds_controller
      action: index
    search: *list
    create: 
      controller: drds_controller
      action: create
  drd:
    show: 
      controller: drds_controller
      action: show
    update: 
      controller: drds_controller
      action: update
    delete: 
      controller: drds_controller
      action: update
